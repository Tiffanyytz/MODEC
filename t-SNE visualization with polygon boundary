#Using LGGs data for example
import numpy as np
from sklearn.manifold import TSNE
from scipy.spatial import ConvexHull
from scipy import interpolate
#x is the imput merged data
x_embedded = TSNE(n_components=2, verbose=0, perplexity=40, n_iter=300).fit_transform(x)
vis_x = x_embedded[:, 0]
vis_y = x_embedded[:, 1]
df_subset = pd.DataFrame()
df_subset['tsne-2d-one'] = vis_x
df_subset['tsne-2d-two'] = vis_y
#using predicted labels for coloring
df_subset['label'] = y_pred
plt.figure(figsize=(12,8))
sns.set_style("whitegrid")
sns.scatterplot(
    x="tsne-2d-one", y="tsne-2d-two",
    hue=y_pred,
    #style=y_pred,
    size=y_pred,
    sizes=(20, 80),
    #palette=sns.color_palette("hls", 10),
    #hue_norm=(0, 7),
    palette=sns.color_palette("hls",3),
    edgecolors= "b",
    data=df_subset,
    legend="full",
    alpha=0.7
)
# draw enclosure
for i in df_subset['label'].unique():
    points = df_subset[df_subset['label'] == i][['tsne-2d-one', 'tsne-2d-two']].values
    # get convex hull
    hull = ConvexHull(points)
    # get x and y coordinates
    # repeat last point to close the polygon
    x_hull = np.append(points[hull.vertices,0],
                       points[hull.vertices,0][0])
    y_hull = np.append(points[hull.vertices,1],
                       points[hull.vertices,1][0])
    # plot shape
    colors = ['#76EEC6', '#E3CF57', '#FF8247', '#33A1C9', '#AB82FF']
    plt.fill(x_hull, y_hull, alpha=0.5, c=colors[i])
